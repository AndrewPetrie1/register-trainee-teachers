name: 'Deploy to PaaS'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to deploy to eg:- qa, staging, production etc'
        required: true
      sha:
        description: Commit sha to be deployed
        required: true

jobs:
  deploy:

    name: Deploy to PaaS ${{ github.event.inputs.environment }}
    env:
        DOCKER_REPO: dfedigital/register-trainee-teacher-data

    if: ${{ !startsWith(github.event.inputs.environment, 'dfe-twd-rttd-pr') }}
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Set Current Deployment Environment variable
        run: |
          echo $DOCKER_IMAGE
          case $DEPLOY_ENV in
            qa) next_env=staging ;;
            staging) next_env=production ;;
          esac

          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
          echo "DEPLOY_ENV=$DEPLOY_ENV" >> $GITHUB_ENV
          echo "NEXT_ENV=$next_env" >> $GITHUB_ENV
        env:
          DOCKER_IMAGE: ${{env.DOCKER_REPO}}:${{ github.event.inputs.sha }}
          DEPLOY_ENV: ${{ github.event.inputs.environment }}

      - uses: softprops/turnstyle@v1
        name: Wait for other inprogress deployment runs
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}

      - name: Start ${{ github.event.inputs.environment }} Deployment
        uses: bobheadxi/deployments@v0.4.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}
          env: ${{ github.event.inputs.environment }}
          ref: ${{ github.event.inputs.sha }}

      - name: Download app configuration file
        working-directory: terraform
        run: |
          echo $APP_SECRETS | base64 -d >> app_secrets.yml
        env:
          APP_SECRETS: ${{ secrets[format('APP_SECRETS_{0}', env.DEPLOY_ENV)] }}

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.13.5

      - name: Terraform init
        run: |
          terraform init -backend-config=terraform/workspace-variables/${{ env.DEPLOY_ENV }}_backend.tfvars terraform
        env:
          ARM_ACCESS_KEY: ${{ secrets[format('ARM_ACCESS_KEY_{0}', env.DEPLOY_ENV)] }}
          TF_VAR_paas_app_docker_image: ${{env.DOCKER_REPO}}:${{ github.event.inputs.sha }}

      - name: Terraform Plan and Apply
        run: |
          terraform plan -var-file=terraform/workspace-variables/${{ env.DEPLOY_ENV }}.tfvars terraform
          terraform apply -var-file=terraform/workspace-variables/${{ env.DEPLOY_ENV }}.tfvars -auto-approve terraform
        env:
          ARM_ACCESS_KEY: ${{ secrets[format('ARM_ACCESS_KEY_{0}', env.DEPLOY_ENV)] }}
          TF_VAR_paas_app_docker_image: ${{env.DOCKER_REPO}}:${{ github.event.inputs.sha }}
          TF_VAR_paas_log_url: ${{ secrets.TF_VAR_PAAS_LOGGING_ENDPOINT_PORT }}
          #PaaS credentials
          TF_VAR_paas_password: ${{ secrets[format('TF_VAR_PAAS_PASSWORD_{0}', env.DEPLOY_ENV)] }}
          TF_VAR_paas_user: ${{ secrets[format('TF_VAR_PAAS_USER_{0}', env.DEPLOY_ENV)] }}
          #dockerHub credentials
          TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          TF_VAR_dockerhub_password: ${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}
          #statusCake credentials
          TF_VAR_statuscake_username: ${{ secrets.TF_VAR_STATUSCAKE_USERNAME }}
          TF_VAR_statuscake_password: ${{ secrets.TF_VAR_STATUSCAKE_PASSWORD}}

      - name: Trigger ${{ env.DEPLOY_ENV }} Smoke Tests
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Smoke Tests
          token:    ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}
          inputs:   '{"environment": "${{ env.DEPLOY_ENV }}"}'

      - name: Wait for smoke tests
        id: wait_for_smoke_tests
        uses: fountainhead/action-wait-for-check@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref:   ${{ github.ref }}
          checkName: smoke-tests-${{ env.DEPLOY_ENV }}
          timeoutSeconds:  300
          intervalSeconds: 15

      - name: Trigger ${{ env.NEXT_ENV }} Deployment
        if: ${{ steps.wait_for_smoke_tests.outputs.conclusion == 'success' && env.NEXT_ENV != '' && github.ref == 'refs/heads/master' }}
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Deploy to PaaS
          token: ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}
          inputs: '{"environment": "${{ env.NEXT_ENV }}", "sha": "${{ github.event.inputs.sha }}"}'

      - name: Update ${{ github.event.inputs.environment }} status
        if: ${{ always() }}
        uses: bobheadxi/deployments@v0.4.2
        with:
          step: finish
          token: ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}
          env: ${{ github.event.inputs.environment }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          ref: ${{ github.event.inputs.sha }}

      - name: Check for Failure
        if: ${{ failure() && github.ref == 'refs/heads/master' }}
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: twd_publish_register_tech
          SLACK_COLOR: '#ef5343'
          SLACK_ICON_EMOJI: ':github-logo:'
          SLACK_USERNAME: Register Trainee Teachers
          SLACK_TITLE: Build Failure
          SLACK_MESSAGE: ':alert: Build failure on ${{ github.event.inputs.environment }} :sadparrot:'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
