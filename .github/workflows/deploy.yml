name: 'Deploy to PaaS'

on:
  workflow_dispatch:
    inputs:
      qa:
        description: Deploy to qa?
        default: 'true'
        required: true
      staging:
        description: Deploy to staging?
        default: 'false'
        required: true
      production:
        description: Deploy to production?
        default: 'false'
        required: true
      sha:
        description: Commit sha to be deployed
        required: true

jobs:
  prepare-matrix:
    name: Prepare Environment Matrix
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      environments: ${{ steps.select-environments.outputs.environments }}
    steps:
      - id:   select-environments
        uses: DFE-Digital/bat-infrastructure/actions/prepare-environment-matrix@main

      - uses: DFE-Digital/github-actions/turnstyle@master
        name: Wait for other inprogress deployment runs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: ${{ matrix.environment }} Deployment
    runs-on: ubuntu-latest
    needs: [prepare-matrix]
    strategy:
       matrix: ${{ fromJson(needs.prepare-matrix.outputs.environments) }}
       max-parallel: 1
    env:
        DOCKER_REPO: dfedigital/register-trainee-teacher-data

    steps:
      - uses: actions/checkout@v2

      - name: Set Current Deployment Environment variable
        run: |
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> $GITHUB_ENV
          echo "DEPLOY_ENV=$DEPLOY_ENV" >> $GITHUB_ENV
        env:
          DOCKER_IMAGE: ${{env.DOCKER_REPO}}:${{ github.event.inputs.sha }}
          DEPLOY_ENV: ${{ matrix.environment }}

      - name: Start ${{ matrix.environment }} Deployment
        uses: bobheadxi/deployments@v0.4.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ matrix.environment }}
          ref: ${{ github.event.inputs.sha }}

      - name: Download app configuration file
        working-directory: terraform
        run: |
          echo $APP_SECRETS | base64 -d >> ./workspace-variables/app_secrets.yml
          echo $INFRA_SECRETS | base64 -d >> ./workspace-variables/infra_secrets.yml
        env:
          APP_SECRETS:   ${{ secrets[format('APP_SECRETS_{0}', env.DEPLOY_ENV)] }}
          INFRA_SECRETS: ${{ secrets[format('INFRA_SECRETS_{0}', env.DEPLOY_ENV)] }}

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.13.5

      - name: Terraform init
        run: |
          terraform init -backend-config=terraform/workspace-variables/${{ env.DEPLOY_ENV }}_backend.tfvars terraform
        env:
          ARM_ACCESS_KEY: ${{ secrets[format('ARM_ACCESS_KEY_{0}', env.DEPLOY_ENV)] }}
          TF_VAR_paas_app_docker_image: ${{env.DOCKER_REPO}}:${{ github.event.inputs.sha }}

      - name: Terraform Plan and Apply
        run: |
          terraform plan -var-file=terraform/workspace-variables/${{ env.DEPLOY_ENV }}.tfvars terraform
          terraform apply -var-file=terraform/workspace-variables/${{ env.DEPLOY_ENV }}.tfvars -auto-approve terraform
        env:
          TF_VAR_paas_app_docker_image: ${{env.DOCKER_REPO}}:${{ github.event.inputs.sha }}
          ARM_ACCESS_KEY: ${{ secrets[format('ARM_ACCESS_KEY_{0}', env.DEPLOY_ENV)] }}

      - name: Trigger ${{ env.DEPLOY_ENV }} Smoke Tests
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Smoke Tests
          token:    ${{ secrets.API_TOKEN_FOR_GITHUB_ACTION }}
          inputs:   '{"environment": "${{ env.DEPLOY_ENV }}"}'

      - name: Wait for smoke tests
        id: wait_for_smoke_tests
        uses: fountainhead/action-wait-for-check@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref:   ${{ github.ref }}
          checkName: smoke-tests-${{ env.DEPLOY_ENV }}
          timeoutSeconds:  300
          intervalSeconds: 15

      - name: Update ${{ matrix.environment }} status
        if: ${{ always() }}
        uses: bobheadxi/deployments@v0.4.2
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ matrix.environment }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          ref: ${{ github.event.inputs.sha }}

      - name: Check for Failure
        if: ${{ failure() && github.ref == 'refs/heads/master' }}
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: twd_publish_register_tech
          SLACK_COLOR: '#ef5343'
          SLACK_ICON_EMOJI: ':github-logo:'
          SLACK_USERNAME: Register Trainee Teachers
          SLACK_TITLE: Build Failure
          SLACK_MESSAGE: ':alert: Build failure on ${{ matrix.environment }} :sadparrot:'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
