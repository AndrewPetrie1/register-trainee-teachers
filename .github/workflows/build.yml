# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOSTNAME: localhost

    steps:
    - uses: actions/checkout@v2

    - name: Get values for current commit
      run: |
        GIT_SHA_SHORT=$(echo ${{github.sha}} | cut -c 1-7)
        GIT_REF=${{github.ref}}
        GIT_BRANCH=${GIT_REF##*/}
        echo "::set-env name=GIT_SHA_SHORT::$GIT_SHA_SHORT"
        echo "::set-env name=GIT_BRANCH::$GIT_BRANCH"
        echo "::set-env name=SHA_TAG::paas-$GIT_SHA_SHORT"
        echo "::set-env name=BRANCH_TAG::paas-$GIT_BRANCH"

    - name: Login to docker hub
      run: echo "${{secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN}}" | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

    - name: "docker pull ${{env.DOCKER_IMAGE}}:${{env.BRANCH_TAG}}"
      run: docker pull $DOCKER_IMAGE:BRANCH_TAG || true

    - name: "docker-compose build web"
      run: $DOCKER_COMPOSE build web
      env:
        GIT_BRANCH: ${{env.BRANCH_TAG}}

    - name: Bring images up
      run: |
        $DOCKER_COMPOSE up --no-build -d
        $DOCKER_COMPOSE exec -T web /bin/sh -c "./wait-for-command.sh -c 'nc -z db 5432' -s 0 -t 20"

    - name: Setup DB
      run: |
        $DOCKER_COMPOSE exec -T web /bin/sh -c "bundle exec rails db:setup"

    - name: Run tests
      run: |
        $DOCKER_COMPOSE exec -T web /bin/sh -c 'bundle exec rake'
      env:
        GIT_BRANCH: ${{env.BRANCH_TAG}}

    - name: Tag docker images
      run: |
        docker tag $DOCKER_IMAGE:$BRANCH_TAG $DOCKER_IMAGE:$SHA_TAG
